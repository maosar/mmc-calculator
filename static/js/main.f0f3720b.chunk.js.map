{"version":3,"sources":["Clock.js","App.js","serviceWorker.js","index.js"],"names":["Clock","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","timer","seconds","minutes","customer","customerPerMinute","clearInterval","timerID","_this2","setState","previousState","_this3","react_default","a","createElement","Button_default","className","onClick","handleTimerButton","handleAddCustomer","_this4","setInterval","tick","React","Component","App","lambda","mu","c","p","p0","lq","wq","w","l","handleLambdaChange","event","target","value","handleMuChange","handleCChange","alert","first","i","Math","pow","factorialize","Container","src_Clock","Form","Row","Col","Group","controlId","Label","Control","name","type","placeholder","concat","validateNumber","onChange","CardDeck","Card","id","Header","Body","Text","calculateP","round","calculateP0","calculateLq","calculateWq","calculateW","calculateL","num","isNaN","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f0f3720b.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nclass Clock extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            timer: false,\r\n            seconds: 0,\r\n            minutes: 0,\r\n            customer: 0,\r\n            customerPerMinute: []\r\n        };\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timerID);\r\n    }\r\n\r\n    tick() {\r\n        if (this.state.seconds < 59) {\r\n            this.setState({\r\n                seconds: this.state.seconds + 1\r\n            });\r\n        } else {\r\n            this.setState(previousState => ({\r\n                seconds: 0,\r\n                minutes: this.state.minutes + 1,\r\n                customer: 0,\r\n                customerPerMinute: [\r\n                    this.state.customerPerMinute,\r\n                    [this.state.minutes + 1, this.state.customer]\r\n                ]\r\n            }))\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button\r\n                    className={!this.state.timer ? 'btn btn-success' : 'btn btn-danger'}\r\n                    onClick={() => {\r\n                        this.handleTimerButton();\r\n                    }}>\r\n                    {!this.state.timer ? 'Start timer' : 'Stop timer'}\r\n                </Button>\r\n                <span className={'display-1'}>\r\n                    {this.state.minutes < 10 ? '0' + (this.state.minutes) : (this.state.minutes)}:{this.state.seconds < 10 ? '0' + (this.state.seconds) : (this.state.seconds)}\r\n                </span><br/>\r\n                <Button\r\n                    onClick={() => {\r\n                        this.handleAddCustomer();\r\n                    }}>\r\n                    Add Customer\r\n                </Button>\r\n                <span className={'display-1'}>{this.state.customer}</span><br/>\r\n                <span className={'display-1'}>{this.state.customerPerMinute}</span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleTimerButton() {\r\n        if (!this.state.timer) {\r\n            this.setState({\r\n                timer: true,\r\n            })\r\n            this.timerID = setInterval(\r\n                () => this.tick(),\r\n                100\r\n            );\r\n        } else {\r\n            clearInterval(this.timerID);\r\n            this.setState({\r\n                timer: false,\r\n                seconds: 0,\r\n                minutes: 0\r\n            })\r\n        }\r\n    }\r\n\r\n    handleAddCustomer() {\r\n        this.setState({\r\n            customer: this.state.customer + 1\r\n        })\r\n    }\r\n}\r\n\r\nexport default Clock;","// TODO: Break out into smaller components.\n// TODO: Add comments/documentation.\n// TODO: Update README.md\n// TODO: Add a header and footer.\n// TODO: Add loading animation before each calculation.\n\nimport Clock from './Clock'\nimport React from 'react';\nimport {Card, CardDeck, Col, Container, Form, Row} from \"react-bootstrap\";\n\nclass App extends React.Component {\n  state = {\n    lambda: '',\n    mu: '',\n    c: '',\n    p: '',\n    p0: '',\n    lq: '',\n    wq: '',\n    w: '',\n    l: '',\n    minutes: 30\n\n  };\n\n  handleLambdaChange = event => {\n    this.setState({\n      lambda: event.target.value,\n      p: '',\n      p0: '',\n      lq: '',\n      wq: '',\n      w: '',\n      l: '',\n    });\n  };\n  handleMuChange = event => {\n    this.setState({\n      mu: event.target.value,\n      p: '',\n      p0: '',\n      lq: '',\n      wq: '',\n      w: '',\n      l: '',\n    });\n  };\n  handleCChange = event => {\n    this.setState({\n      c: event.target.value,\n      p: '',\n      p0: '',\n      lq: '',\n      wq: '',\n      w: '',\n      l: '',\n    });\n  };\n\n  calculateP() {\n    if(this.state.c * this.state.mu > this.state.lambda){\n      this.setState({\n        p: this.state.lambda / (this.state.c * this.state.mu)\n      })\n    }else{\n      this.setState({\n        lambda: '',\n        mu: '',\n        c: '',\n        p: ''\n      })\n      alert(\"Arrival rate cannot be larger than or equal to (service rate)*(number of servers)\")\n    }\n  }\n\n  calculateP0() {\n    let first = 0;\n    let c = this.state.c;\n    let p = this.state.p;\n\n    for (let i = c - 1; i >= 0; i--) {\n      first += Math.pow(c * p, i) / App.factorialize(i);\n    }\n\n    const p0 = 1 / (first + Math.pow(c * p, c) / (App.factorialize(c) * (1 - p)));\n\n    this.setState({\n      p0: p0\n    })\n\n  }\n  calculateLq(){\n    this.setState({\n      lq: (this.state.p0 * Math.pow(this.state.lambda/this.state.mu, this.state.c) * this.state.p)/(App.factorialize(this.state.c)* Math.pow(1-this.state.p,2))\n    })\n  }\n  calculateWq(){\n    this.setState({\n      wq: this.state.lq/this.state.lambda\n    })\n  }\n  calculateW(){\n    this.setState({\n      w: this.state.wq + (1/this.state.mu)\n    })\n  }\n  calculateL(){\n    this.setState({\n      l: this.state.lambda * this.state.w\n    })\n  }\n\n  static factorialize(num) {\n    if (num === 0 || num === 1)\n      return 1;\n    for (var i = num - 1; i >= 1; i--) {\n      num *= i;\n    }\n    return num;\n  }\n\n  static validateNumber(num) {\n    return num !== '' && !isNaN(num);\n  }\n\n  render() {\n\n    const lambda = this.state.lambda;\n    const mu = this.state.mu;\n    const c = this.state.c;\n    const p = this.state.p;\n    const p0 = this.state.p0;\n    const lq = this.state.lq;\n    const wq = this.state.wq;\n    const w = this.state.w;\n    const l = this.state.l;\n\n    return (\n        <Container>\n          <Clock />\n          <h1 className=\"display-1\">M/M/C Calculator</h1>\n          <hr/>\n          <Form>\n            <Row>\n              <Col>\n                <Form.Group controlId=\"formLambda\">\n                  <Form.Label>Arrival rate:</Form.Label><br/>\n                  <Form.Control\n                      name={'lambda'}\n                      type={'text'}\n                      placeholder={'Enter service rate'}\n                      className={`form-control ${this.state.lambda === '' ? '' : App.validateNumber(this.state.lambda) ? 'is-valid' : 'is-invalid'}`}\n                      onChange={this.handleLambdaChange}\n                      value={lambda}\n\n                  />\n                  <div\n                      className={`${this.state.lambda === '' ? 'text-muted' : App.validateNumber(this.state.lambda) ? 'valid-feedback' : 'invalid-feedback'}`}>{this.state.lambda === '' ? 'Arrival rate must be entered' : App.validateNumber(this.state.lambda) ? '\"' + this.state.lambda + '\" is a number!' : '\"' + this.state.lambda + '\" is NOT a number!'}</div>\n                </Form.Group>\n              </Col>\n              <Col>\n                <Form.Group controlId=\"formMu\">\n                  <Form.Label>Service rate:</Form.Label><br/>\n                  <Form.Control\n                      name={'mu'}\n                      type={'text'}\n                      placeholder={'Enter service rate'}\n                      className={`form-control ${this.state.mu === '' ? '' : App.validateNumber(this.state.mu) ? 'is-valid' : 'is-invalid'}`}\n                      onChange={this.handleMuChange}\n                      value={mu}\n                  />\n                  <div\n                      className={`${this.state.mu === '' ? 'text-muted' : App.validateNumber(this.state.mu) ? 'valid-feedback' : 'invalid-feedback'}`}>{this.state.mu === '' ? 'Service rate must be entered' : App.validateNumber(this.state.mu) ? '\"' + this.state.mu + '\" is a number!' : '\"' + this.state.mu + '\" is NOT a number!'}</div>\n                </Form.Group>\n              </Col>\n              <Col>\n                <Form.Group controlId=\"formBasicC\">\n                  <Form.Label>Number of servers:</Form.Label><br/>\n                  <Form.Control\n                      name={'name'}\n                      type={'text'}\n                      placeholder={'Enter number of servers'}\n                      className={`form-control ${this.state.c === '' ? '' : App.validateNumber(this.state.c) ? 'is-valid' : 'is-invalid'}`}\n                      onChange={this.handleCChange}\n                      value={c}\n                  />\n                  <div\n                      className={`${this.state.c === '' ? 'text-muted' : App.validateNumber(this.state.c) ? 'valid-feedback' : 'invalid-feedback'}`}>{this.state.c === '' ? 'Number of servers must be entered' : App.validateNumber(this.state.c) ? '\"' + this.state.c + '\" is a number!' : '\"' + this.state.c + '\" is NOT a number!'}</div>\n\n                </Form.Group>\n              </Col>\n            </Row>\n          </Form>\n          <hr/>\n          <CardDeck>\n            <Card id={'p-card'}>\n              <Card.Header>The average utilization of the system (p)</Card.Header>\n              <Card.Body>\n                <Card.Text>\n                  {App.validateNumber(lambda) && App.validateNumber(mu) && App.validateNumber(c) && !App.validateNumber(p) ? this.calculateP() : ''}\n                  {App.validateNumber(p) ? `P is: ${Math.round(p * 10000) / 10000}` : 'All values must be entered correctly to calculate P.'}\n                </Card.Text>\n              </Card.Body>\n            </Card>\n            <Card id={'p0-card'}>\n              <Card.Header>The  probability  that  no  customers are in the system (p0)</Card.Header>\n              <Card.Body>\n                <Card.Text>\n                  {App.validateNumber(p) && !App.validateNumber(p0) ? this.calculateP0() : ''}\n                  {App.validateNumber(p0) ? `P0 is: ${Math.round(p0 * 10000) / 10000}` : 'All values must be entered correctly to calculate p0.'}\n                </Card.Text>\n              </Card.Body>\n            </Card>\n            <Card id={'lq-card'}>\n              <Card.Header>The average number of customers waiting in line (lq)</Card.Header>\n              <Card.Body>\n                <Card.Text>\n                  {App.validateNumber(p0) && !App.validateNumber(lq) ? this.calculateLq() : ''}\n                  {App.validateNumber(lq) ? `LQ is: ${Math.round(lq * 10000) / 10000}` : 'All values must be entered correctly to calculate LQ.'}\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          </CardDeck>\n          <br/>\n          <CardDeck>\n            <Card id={'wq-card'}>\n              <Card.Header>The average time spent waiting in line</Card.Header>\n              <Card.Body>\n                <Card.Text>\n                  {App.validateNumber(lq) && !App.validateNumber(wq) ? this.calculateWq() : ''}\n                  {App.validateNumber(wq) ? `WQ is: ${Math.round(wq * 10000) / 10000}` : 'All values must be entered correctly to calculate WQ.'}\n                </Card.Text>\n              </Card.Body>\n            </Card>\n            <Card id={'w-card'}>\n              <Card.Header>The average time spent in the system, including service (w)</Card.Header>\n              <Card.Body>\n                <Card.Text>\n                  {App.validateNumber(wq) && !App.validateNumber(w) ? this.calculateW() : ''}\n                  {App.validateNumber(w) ? `W is: ${Math.round(w * 10000) / 10000}` : 'All values must be entered correctly to calculate W.'}\n                </Card.Text>\n              </Card.Body>\n            </Card>\n            <Card id={'l-card'}>\n              <Card.Header>The average number of customers in the service system (l)</Card.Header>\n              <Card.Body>\n                <Card.Text>\n                  {App.validateNumber(w) && !App.validateNumber(l) ? this.calculateL() : ''}\n                  {App.validateNumber(l) ? `L is: ${Math.round(l * 10000) / 10000}` : 'All values must be entered correctly to calculate L.'}\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          </CardDeck>\n          <hr/>\n\n        </Container>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}