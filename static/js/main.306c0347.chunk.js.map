{"version":3,"sources":["ServiceObservation.js","ArrivalObservation.js","ServiceTable.js","ArrivalTable.js","Download.js","Clock.js","App.js","serviceWorker.js","index.js"],"names":["ServiceObservation","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isTimerRunning","serviceTime","startTime","minutes","second","stopTime","_this2","observationTime","seconds","react_default","a","createElement","Button_default","className","concat","onClick","handleTimerButton","disabled","_this3","setState","previousState","toConsumableArray","setST","React","Component","ArrivalObservation","customer","customerPerMinute","prevProps","prevState","snapshot","minute","customers","setCPM","handleAddCustomer","ServiceTable","items","map","item","key","id","Table_default","striped","bordered","size","ArrivalTable","ExcelFile","ReactExport","ExcelSheet","ExcelColumn","Download","element","data","name","label","value","Clock","bind","assertThisInitialized","cpm","st","clearInterval","timerID","Row","Col","es_Button","src_ArrivalObservation","src_ServiceObservation","src_ArrivalTable","src_ServiceTable","src_Download","setInterval","tick","App","lambda","mu","c","p","p0","lq","wq","w","l","handleLambdaChange","event","target","handleMuChange","handleCChange","alert","first","i","Math","pow","factorialize","Container","src_Clock","Form","Group","controlId","Label","Control","type","placeholder","validateNumber","onChange","CardDeck","Card","Header","Body","Text","calculateP","round","calculateP0","calculateLq","calculateWq","calculateW","calculateL","num","isNaN","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.306c0347.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nclass ServiceObservation extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tisTimerRunning: false,\r\n\t\t\tserviceTime: [],\r\n\t\t\tstartTime: {\r\n\t\t\t\tminutes: 0,\r\n\t\t\t\tsecond: 0,\r\n\t\t\t},\r\n\t\t\tstopTime: {\r\n\t\t\t\tminutes: 0,\r\n\t\t\t\tsecond: 0,\r\n\t\t\t}\r\n\r\n\t\t};\r\n\t}\r\n\r\n\r\n\r\n\trender() {\r\n\t\tconst observationTime = (this.props.minutes * 60 + this.props.seconds) - (this.state.startTime.minutes * 60 + this.state.startTime.seconds);\r\n\t\tif (this.props.isTimerRunning) {\r\n\t\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tclassName={`btn-lg btn ${!this.state.isTimerRunning ? 'btn-success' : 'btn-danger'}`}\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tthis.handleTimerButton();\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t{!this.state.isTimerRunning ? 'Start service' : 'Stop service'}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<p className={'display-1'}>{!this.state.isTimerRunning ? '0' : observationTime}</p>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\tclassName={`btn-lg btn ${!this.state.isTimerRunning ? 'btn-success' : 'btn-danger'}`}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{!this.state.isTimerRunning ? 'Start service' : 'Stop service'}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<p className={'display-1'}>{!this.state.isTimerRunning ? '0' : observationTime}</p>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\thandleTimerButton() {\r\n\t\tif (!this.state.isTimerRunning) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tstartTime: {\r\n\t\t\t\t\tminutes: this.props.minutes,\r\n\t\t\t\t\tseconds: this.props.seconds\r\n\t\t\t\t},\r\n\t\t\t\tisTimerRunning: true\r\n\t\t\t});\r\n\r\n\t\t} else {\r\n\t\t\tthis.setState({\r\n\t\t\t\tstopTime: {\r\n\t\t\t\t\tminutes: this.props.minutes,\r\n\t\t\t\t\tseconds: this.props.seconds\r\n\t\t\t\t},\r\n\t\t\t\tisTimerRunning: false\r\n\t\t\t}, () =>{\r\n\t\t\t\tconst observationTime = ((this.state.stopTime.minutes * 60) + this.state.stopTime.seconds) - ((this.state.startTime.minutes * 60) + this.state.startTime.seconds);\r\n\t\t\t\tthis.setState(previousState => ({\r\n\t\t\t\t\tserviceTime: [\r\n\t\t\t\t\t\t...previousState.serviceTime,\r\n\t\t\t\t\t\t{startTime: (this.state.startTime.minutes < 10 ? '0' : '') + this.state.startTime.minutes + ':' + (this.state.startTime.seconds < 10 ? '0' : '') + this.state.startTime.seconds,\r\n\t\t\t\t\t\t\tstopTime: (this.state.stopTime.minutes < 10 ? '0' : '') + this.state.stopTime.minutes + ':' + (this.state.stopTime.seconds < 10 ? '0' : '') + this.state.stopTime.seconds,\r\n\t\t\t\t\t\t\tserviceTime: observationTime}\r\n\t\t\t\t\t]\r\n\r\n\t\t\t\t}), () => {\r\n\t\t\t\t\tthis.props.setST(this.state.serviceTime)\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport default ServiceObservation;","import React from 'react';\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nclass ArrivalObservation extends React.Component {\r\n\tstate = {\r\n\t\tcustomer: 0,\r\n\t\tcustomerPerMinute: []\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps, prevState, snapshot) {\r\n\t\tif (prevProps.minutes !== this.props.minutes && this.props.minutes !== 0) {\r\n\t\t\tthis.setState(previousState => ({\r\n\t\t\t\tcustomer: 0,\r\n\t\t\t\tcustomerPerMinute: [\r\n\t\t\t\t\t...previousState.customerPerMinute,\r\n\t\t\t\t\t{minute: this.props.minutes, customers: this.state.customer}\r\n\t\t\t\t]\r\n\t\t\t}), () => {\r\n\t\t\t\tthis.props.setCPM(this.state.customerPerMinute)\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.props.isTimerRunning) {\r\n\t\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tclassName={'btn btn-primary btn-lg'}\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tthis.handleAddCustomer();\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\tAdd Customer\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<p className={'display-1'}>{this.state.customer}</p><br/>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tclassName={'btn btn-primary btn-lg'}\r\n\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tAdd Customer\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<p className={'display-1'}>{this.state.customer}</p><br/>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\r\n\thandleAddCustomer() {\r\n\t\tthis.setState({\r\n\t\t\tcustomer: this.state.customer + 1\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport default ArrivalObservation;","import React from 'react';\r\nimport Table from \"react-bootstrap/Table\";\r\n\r\nclass ServiceTable extends React.Component{\r\n\r\n\trender(){\r\n\t\tconst serviceTime = this.props.serviceTime;\r\n\t\tconst items = serviceTime.map((item, key) =>\r\n\t\t\t<tr id={key} key={key}><td>{item.startTime}</td><td>{item.stopTime}</td><td>{item.serviceTime}</td></tr>\r\n\t\t);\r\n\t\treturn (\r\n\t\t\t<Table striped bordered size=\"sm\">\r\n\t\t\t\t<thead>\r\n\t\t\t\t<tr><th>Start time</th><th>Stop time</th><th>Service time</th></tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t{items}\r\n\t\t\t\t</tbody>\r\n\t\t\t</Table>\r\n\t\t)\r\n\t}\r\n}\r\nexport default ServiceTable;","import React from 'react';\r\nimport Table from \"react-bootstrap/Table\";\r\n\r\nclass ArrivalTable extends React.Component{\r\n\r\n\r\n\trender(){\r\n\r\n\t\tconst customerPerMinute = this.props.customerPerMinute;\r\n\t\tconst items = customerPerMinute.map((item, key) =>\r\n\t\t\t<tr id={key} key={key}><td>{item.minute}</td><td>{item.customers}</td></tr>\r\n\t\t);\r\n\r\n\r\n\t\treturn (\r\n\t\t\t\t<Table striped bordered size=\"sm\">\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t<tr><th>Minute</th><th>Customers</th></tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t{items}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</Table>\r\n\t\t)\r\n\t}\r\n}\r\nexport default ArrivalTable;","import React from \"react\";\r\nimport ReactExport from \"react-data-export\";\r\n\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\r\n\r\nclass Download extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<ExcelFile element={<button>Download Data</button>}>\r\n\t\t\t\t<ExcelSheet data={this.props.serviceTime} name=\"Service Time\">\r\n\t\t\t\t\t<ExcelColumn label=\"Start Time\" value=\"startTime\"/>\r\n\t\t\t\t\t<ExcelColumn label=\"Stop Time\" value=\"stopTime\"/>\r\n\t\t\t\t\t<ExcelColumn label=\"Service Time\" value=\"serviceTime\"/>\r\n\t\t\t\t</ExcelSheet>\r\n\t\t\t\t<ExcelSheet data={this.props.customerPerMinute} name=\"Customers Per Minute\">\r\n\t\t\t\t\t<ExcelColumn label=\"Minute\" value=\"minute\"/>\r\n\t\t\t\t\t<ExcelColumn label=\"Customers\" value=\"customers\"/>\r\n\t\t\t\t</ExcelSheet>\r\n\t\t\t</ExcelFile>\r\n\t\t);\r\n\t}\r\n}\r\nexport default Download;","import React from 'react';\r\nimport ServiceObservation from './ServiceObservation'\r\nimport ArrivalObservation from './ArrivalObservation'\r\nimport ServiceTable from './ServiceTable'\r\nimport ArrivalTable from './ArrivalTable'\r\nimport {Col, Row, Button} from \"react-bootstrap\";\r\nimport Download from './Download'\r\n\r\nclass Clock extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tisTimerRunning: false,\r\n\t\t\tseconds: 0,\r\n\t\t\tminutes: 0,\r\n\t\t\tcustomerPerMinute: [],\r\n\t\t\tserviceTime: []\r\n\t\t};\r\n\t\tthis.setCPM = this.setCPM.bind(this);\r\n\t\tthis.setST = this.setST.bind(this);\r\n\r\n\t}\r\n\r\n\tsetCPM(cpm) {\r\n\t\tthis.setState({\r\n\t\t\tcustomerPerMinute: cpm\r\n\t\t});\r\n\t}\r\n\r\n\tsetST(st) {\r\n\t\tthis.setState({\r\n\t\t\tserviceTime: st\r\n\t\t});\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tclearInterval(this.timerID);\r\n\t}\r\n\r\n\ttick() {\r\n\t\tif (this.state.seconds < 59) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tseconds: this.state.seconds + 1\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.setState({\r\n\t\t\t\tseconds: 0,\r\n\t\t\t\tminutes: this.state.minutes + 1\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col className={\"text-center\"}>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tclassName={`btn-lg btn ${!this.state.isTimerRunning ? 'btn btn-success' : 'btn btn-danger'}`}\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tthis.handleTimerButton();\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t{!this.state.isTimerRunning ? 'Start observation' : 'Stop observation'}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<p className={'display-1'}>\r\n                    {this.state.minutes < 10 ? '0' + (this.state.minutes) : (this.state.minutes)}:{this.state.seconds < 10 ? '0' + (this.state.seconds) : (this.state.seconds)}\r\n                </p>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col className={\"text-center\"}>\r\n\t\t\t\t\t\t<ArrivalObservation isTimerRunning={this.state.isTimerRunning}\r\n\t\t\t\t\t\t                    minutes={this.state.minutes}\r\n\t\t\t\t\t\t                    setCPM={this.setCPM}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col className={\"text-center\"}>\r\n\t\t\t\t\t\t<ServiceObservation isTimerRunning={this.state.isTimerRunning}\r\n\t\t\t\t\t\t                    minutes={this.state.minutes}\r\n\t\t\t\t\t\t                    seconds={this.state.seconds} setST={this.setST}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<br/>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col><ArrivalTable customerPerMinute={this.state.customerPerMinute}/></Col>\r\n\t\t\t\t\t<Col><ServiceTable serviceTime={this.state.serviceTime}/></Col>\r\n\t\t\t\t</Row>\r\n\t\t\t\t{this.state.customerPerMinute !== null && this.state.serviceTime !== null ? <Download customerPerMinute={this.state.customerPerMinute}\r\n\t\t\t\t                                                                    serviceTime={this.state.serviceTime}\r\n\t\t\t\t/> : ''}\r\n\r\n\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\thandleTimerButton() {\r\n\t\tif (!this.state.isTimerRunning) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tisTimerRunning: true,\r\n\t\t\t});\r\n\t\t\tthis.timerID = setInterval(\r\n\t\t\t\t() => this.tick(),\r\n\t\t\t\t100\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tclearInterval(this.timerID);\r\n\t\t\tthis.setState({\r\n\t\t\t\tisTimerRunning: false,\r\n\t\t\t\tseconds: 0,\r\n\t\t\t\tminutes: 0\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default Clock;","// TODO: Break out into smaller components.\r\n// TODO: Add comments/documentation.\r\n// TODO: Update README.md\r\n// TODO: Add a header and footer.\r\n// TODO: Add loading animation before each calculation.\r\n\r\nimport Clock from './Clock'\r\nimport React from 'react';\r\nimport {Card, CardDeck, Col, Container, Form, Row} from \"react-bootstrap\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    lambda: '',\r\n    mu: '',\r\n    c: '',\r\n    p: '',\r\n    p0: '',\r\n    lq: '',\r\n    wq: '',\r\n    w: '',\r\n    l: '',\r\n    minutes: 30\r\n\r\n  };\r\n\r\n  handleLambdaChange = event => {\r\n    this.setState({\r\n      lambda: event.target.value,\r\n      p: '',\r\n      p0: '',\r\n      lq: '',\r\n      wq: '',\r\n      w: '',\r\n      l: '',\r\n    });\r\n  };\r\n  handleMuChange = event => {\r\n    this.setState({\r\n      mu: event.target.value,\r\n      p: '',\r\n      p0: '',\r\n      lq: '',\r\n      wq: '',\r\n      w: '',\r\n      l: '',\r\n    });\r\n  };\r\n  handleCChange = event => {\r\n    this.setState({\r\n      c: event.target.value,\r\n      p: '',\r\n      p0: '',\r\n      lq: '',\r\n      wq: '',\r\n      w: '',\r\n      l: '',\r\n    });\r\n  };\r\n\r\n  calculateP() {\r\n    if(this.state.c * this.state.mu > this.state.lambda){\r\n      this.setState({\r\n        p: this.state.lambda / (this.state.c * this.state.mu)\r\n      })\r\n    }else{\r\n      this.setState({\r\n        lambda: '',\r\n        mu: '',\r\n        c: '',\r\n        p: ''\r\n      })\r\n      alert(\"Arrival rate cannot be larger than or equal to (service rate)*(number of servers)\")\r\n    }\r\n  }\r\n\r\n  calculateP0() {\r\n    let first = 0;\r\n    let c = this.state.c;\r\n    let p = this.state.p;\r\n\r\n    for (let i = c - 1; i >= 0; i--) {\r\n      first += Math.pow(c * p, i) / App.factorialize(i);\r\n    }\r\n\r\n    const p0 = 1 / (first + Math.pow(c * p, c) / (App.factorialize(c) * (1 - p)));\r\n\r\n    this.setState({\r\n      p0: p0\r\n    })\r\n\r\n  }\r\n  calculateLq(){\r\n    this.setState({\r\n      lq: (this.state.p0 * Math.pow(this.state.lambda/this.state.mu, this.state.c) * this.state.p)/(App.factorialize(this.state.c)* Math.pow(1-this.state.p,2))\r\n    })\r\n  }\r\n  calculateWq(){\r\n    this.setState({\r\n      wq: this.state.lq/this.state.lambda\r\n    })\r\n  }\r\n  calculateW(){\r\n    this.setState({\r\n      w: this.state.wq + (1/this.state.mu)\r\n    })\r\n  }\r\n  calculateL(){\r\n    this.setState({\r\n      l: this.state.lambda * this.state.w\r\n    })\r\n  }\r\n\r\n  static factorialize(num) {\r\n    if (num === 0 || num === 1)\r\n      return 1;\r\n    for (var i = num - 1; i >= 1; i--) {\r\n      num *= i;\r\n    }\r\n    return num;\r\n  }\r\n\r\n  static validateNumber(num) {\r\n    return num !== '' && !isNaN(num);\r\n  }\r\n\r\n  render() {\r\n\r\n    const lambda = this.state.lambda;\r\n    const mu = this.state.mu;\r\n    const c = this.state.c;\r\n    const p = this.state.p;\r\n    const p0 = this.state.p0;\r\n    const lq = this.state.lq;\r\n    const wq = this.state.wq;\r\n    const w = this.state.w;\r\n    const l = this.state.l;\r\n\r\n    return (\r\n        <Container>\r\n          <h1 className=\"display-3\">Queue and service observation</h1>\r\n          <hr/>\r\n          <Clock />\r\n          <hr/>\r\n          <h1 className=\"display-3\">M/M/C Calculator</h1>\r\n          <hr/>\r\n          <Form>\r\n            <Row>\r\n              <Col>\r\n                <Form.Group controlId=\"formLambda\">\r\n                  <Form.Label>Arrival rate:</Form.Label><br/>\r\n                  <Form.Control\r\n                      name={'lambda'}\r\n                      type={'text'}\r\n                      placeholder={'Enter service rate'}\r\n                      className={`form-control ${this.state.lambda === '' ? '' : App.validateNumber(this.state.lambda) ? 'is-valid' : 'is-invalid'}`}\r\n                      onChange={this.handleLambdaChange}\r\n                      value={lambda}\r\n\r\n                  />\r\n                  <div\r\n                      className={`${this.state.lambda === '' ? 'text-muted' : App.validateNumber(this.state.lambda) ? 'valid-feedback' : 'invalid-feedback'}`}>{this.state.lambda === '' ? 'Arrival rate must be entered' : App.validateNumber(this.state.lambda) ? '\"' + this.state.lambda + '\" is a number!' : '\"' + this.state.lambda + '\" is NOT a number!'}</div>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col>\r\n                <Form.Group controlId=\"formMu\">\r\n                  <Form.Label>Service rate:</Form.Label><br/>\r\n                  <Form.Control\r\n                      name={'mu'}\r\n                      type={'text'}\r\n                      placeholder={'Enter service rate'}\r\n                      className={`form-control ${this.state.mu === '' ? '' : App.validateNumber(this.state.mu) ? 'is-valid' : 'is-invalid'}`}\r\n                      onChange={this.handleMuChange}\r\n                      value={mu}\r\n                  />\r\n                  <div\r\n                      className={`${this.state.mu === '' ? 'text-muted' : App.validateNumber(this.state.mu) ? 'valid-feedback' : 'invalid-feedback'}`}>{this.state.mu === '' ? 'Service rate must be entered' : App.validateNumber(this.state.mu) ? '\"' + this.state.mu + '\" is a number!' : '\"' + this.state.mu + '\" is NOT a number!'}</div>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col>\r\n                <Form.Group controlId=\"formBasicC\">\r\n                  <Form.Label>Number of servers:</Form.Label><br/>\r\n                  <Form.Control\r\n                      name={'name'}\r\n                      type={'text'}\r\n                      placeholder={'Enter number of servers'}\r\n                      className={`form-control ${this.state.c === '' ? '' : App.validateNumber(this.state.c) ? 'is-valid' : 'is-invalid'}`}\r\n                      onChange={this.handleCChange}\r\n                      value={c}\r\n                  />\r\n                  <div\r\n                      className={`${this.state.c === '' ? 'text-muted' : App.validateNumber(this.state.c) ? 'valid-feedback' : 'invalid-feedback'}`}>{this.state.c === '' ? 'Number of servers must be entered' : App.validateNumber(this.state.c) ? '\"' + this.state.c + '\" is a number!' : '\"' + this.state.c + '\" is NOT a number!'}</div>\r\n\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n          <hr/>\r\n          <CardDeck>\r\n            <Card id={'p-card'}>\r\n              <Card.Header>The average utilization of the system (p)</Card.Header>\r\n              <Card.Body>\r\n                <Card.Text>\r\n                  {App.validateNumber(lambda) && App.validateNumber(mu) && App.validateNumber(c) && !App.validateNumber(p) ? this.calculateP() : ''}\r\n                  {App.validateNumber(p) ? `P is: ${Math.round(p * 10000) / 10000}` : 'All values must be entered correctly to calculate P.'}\r\n                </Card.Text>\r\n              </Card.Body>\r\n            </Card>\r\n            <Card id={'p0-card'}>\r\n              <Card.Header>The  probability  that  no  customers are in the system (p0)</Card.Header>\r\n              <Card.Body>\r\n                <Card.Text>\r\n                  {App.validateNumber(p) && !App.validateNumber(p0) ? this.calculateP0() : ''}\r\n                  {App.validateNumber(p0) ? `P0 is: ${Math.round(p0 * 10000) / 10000}` : 'All values must be entered correctly to calculate p0.'}\r\n                </Card.Text>\r\n              </Card.Body>\r\n            </Card>\r\n            <Card id={'lq-card'}>\r\n              <Card.Header>The average number of customers waiting in line (lq)</Card.Header>\r\n              <Card.Body>\r\n                <Card.Text>\r\n                  {App.validateNumber(p0) && !App.validateNumber(lq) ? this.calculateLq() : ''}\r\n                  {App.validateNumber(lq) ? `LQ is: ${Math.round(lq * 10000) / 10000}` : 'All values must be entered correctly to calculate LQ.'}\r\n                </Card.Text>\r\n              </Card.Body>\r\n            </Card>\r\n          </CardDeck>\r\n          <br/>\r\n          <CardDeck>\r\n            <Card id={'wq-card'}>\r\n              <Card.Header>The average time spent waiting in line</Card.Header>\r\n              <Card.Body>\r\n                <Card.Text>\r\n                  {App.validateNumber(lq) && !App.validateNumber(wq) ? this.calculateWq() : ''}\r\n                  {App.validateNumber(wq) ? `WQ is: ${Math.round(wq * 10000) / 10000}` : 'All values must be entered correctly to calculate WQ.'}\r\n                </Card.Text>\r\n              </Card.Body>\r\n            </Card>\r\n            <Card id={'w-card'}>\r\n              <Card.Header>The average time spent in the system, including service (w)</Card.Header>\r\n              <Card.Body>\r\n                <Card.Text>\r\n                  {App.validateNumber(wq) && !App.validateNumber(w) ? this.calculateW() : ''}\r\n                  {App.validateNumber(w) ? `W is: ${Math.round(w * 10000) / 10000}` : 'All values must be entered correctly to calculate W.'}\r\n                </Card.Text>\r\n              </Card.Body>\r\n            </Card>\r\n            <Card id={'l-card'}>\r\n              <Card.Header>The average number of customers in the service system (l)</Card.Header>\r\n              <Card.Body>\r\n                <Card.Text>\r\n                  {App.validateNumber(w) && !App.validateNumber(l) ? this.calculateL() : ''}\r\n                  {App.validateNumber(l) ? `L is: ${Math.round(l * 10000) / 10000}` : 'All values must be entered correctly to calculate L.'}\r\n                </Card.Text>\r\n              </Card.Body>\r\n            </Card>\r\n          </CardDeck>\r\n          <hr/>\r\n\r\n        </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}