{"version":3,"sources":["components/observation/ServiceObservation.js","components/observation/ArrivalObservation.js","components/observation/ServiceTable.js","components/observation/ArrivalTable.js","components/observation/Download.js","components/observation/Timer.js","components/observation/Observation.js","components/Header.js","components/Home.js","components/About.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["ServiceObservation","state","timer","isOn","startTime","seconds","serviceObservation","stopTime","serviceTime","prevProps","prevState","snapshot","_this2","this","props","clearInterval","isObservationRunning","setState","minutes","addServiceObservation","_this3","Date","now","setInterval","tick","millis","Math","floor","_this4","observationTime","react_default","a","createElement","Button_default","className","concat","onClick","toggleTimer","disabled","React","Component","ArrivalObservation","arrivalObservation","minute","customers","addArrivalObservation","handleAddCustomer","ServiceTable","items","map","item","key","id","Table_default","striped","bordered","size","ArrivalTable","ExcelFile","ReactExport","ExcelSheet","ExcelColumn","Download","element","data","name","label","value","customerPerMinute","Timer","_this","setIsObservationRunning","setTimer","convertMS","milliseconds","es_Button","Observation","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","customer","bind","assertThisInitialized","setCustomer","boolean","num","joined","Row","Col","md","observation_Timer","observation_ArrivalObservation","observation_ServiceObservation","observation_ArrivalTable","observation_ServiceTable","observation_Download","Header","Navbar","bg","expand","fixed","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","Item","Home","About","Tabs","defaultActiveKey","Tab","eventKey","Card_default","Body","Footer","App","lambda","mu","c","p","p0","lq","wq","w","l","handleLambdaChange","event","target","handleMuChange","handleCChange","alert","first","i","pow","factorialize","Container","components_Header","components_Home","components_About","observation_Observation","Form","Group","controlId","Label","Control","type","placeholder","validateNumber","onChange","CardDeck","es_Card","Text","calculateP","round","calculateP0","calculateLq","calculateWq","calculateW","calculateL","components_Footer","isNaN","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d52ed7b2.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nclass ServiceObservation extends React.Component {\r\n    state = {\r\n        timer: {\r\n            isOn: false,\r\n            startTime: 0,\r\n            seconds: 0,\r\n        },\r\n        serviceObservation: {\r\n            startTime: 0,\r\n            stopTime: 0,\r\n            serviceTime: 0\r\n        }\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (!this.props.timer.isOn) {\r\n            clearInterval(this.timer);\r\n        }\r\n        if(prevProps.isObservationRunning && !this.props.isObservationRunning && this.state.timer.isOn){\r\n            this.setState({\r\n                timer: {\r\n                    isOn: false,\r\n                    startTime: 0,\r\n                    seconds: 0\r\n                },\r\n                serviceObservation: {\r\n                    startTime: this.state.serviceObservation.startTime,\r\n                    stopTime: (this.props.timer.minutes < 10 ? '0' + (this.props.timer.minutes) : (this.props.timer.minutes))+':'+(this.props.timer.seconds < 10 ? '0' + (this.props.timer.seconds) : (this.props.timer.seconds)),\r\n                    serviceTime: this.state.serviceObservation.serviceTime\r\n                }\r\n            }, ()=>{\r\n                this.props.addServiceObservation(this.state.serviceObservation)\r\n            })\r\n        }\r\n    }\r\n\r\n    toggleTimer() {\r\n        if (!this.state.timer.isOn) {\r\n            this.setState({\r\n                timer: {\r\n                    isOn: true,\r\n                    startTime: Date.now(),\r\n                    seconds: this.state.timer.seconds\r\n                },\r\n                serviceObservation: {\r\n                    startTime: (this.props.timer.minutes < 10 ? '0' + (this.props.timer.minutes) : (this.props.timer.minutes))+':'+(this.props.timer.seconds < 10 ? '0' + (this.props.timer.seconds) : (this.props.timer.seconds)),\r\n                    stopTime: 0,\r\n                    serviceTime: 0\r\n                }\r\n            });\r\n            this.timer = setInterval(\r\n                () => this.tick(),\r\n                1\r\n            );\r\n        } else {\r\n            clearInterval(this.timer);\r\n            this.setState({\r\n                timer: {\r\n                    isOn: false,\r\n                    startTime: 0,\r\n                    seconds: 0\r\n                },\r\n                serviceObservation: {\r\n                    startTime: this.state.serviceObservation.startTime,\r\n                    stopTime: (this.props.timer.minutes < 10 ? '0' + (this.props.timer.minutes) : (this.props.timer.minutes))+':'+(this.props.timer.seconds < 10 ? '0' + (this.props.timer.seconds) : (this.props.timer.seconds)),\r\n                    serviceTime: this.state.serviceObservation.serviceTime\r\n                }\r\n            }, ()=>{\r\n                this.props.addServiceObservation(this.state.serviceObservation)\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n    tick() {\r\n        var millis = Date.now() - this.state.timer.startTime;\r\n        var seconds = Math.floor(millis / 1000);\r\n        this.setState({\r\n            timer: {\r\n                isOn: true,\r\n                startTime: this.state.timer.startTime,\r\n                seconds: (seconds === 60 ? 0 : seconds),\r\n\r\n            },\r\n            serviceObservation: {\r\n                startTime: this.state.serviceObservation.startTime,\r\n                stopTime: 0,\r\n                serviceTime: this.state.timer.seconds\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const observationTime = this.state.timer.seconds;\r\n        if (this.props.timer.isOn) {\r\n            return (\r\n                <div>\r\n                    <Button\r\n                        className={`btn-lg btn ${this.state.timer.isOn ? 'btn-danger' : 'btn-success'}`}\r\n                        onClick={() => {\r\n                            this.toggleTimer()\r\n                        }}\r\n                    >\r\n                        {!this.state.timer.isOn ? 'Start service' : 'Stop service'}\r\n                    </Button>\r\n                    <p className={'display-1'}>{this.state.timer.isOn ? observationTime : '0'}</p>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <Button disabled\r\n                            className={`btn-lg btn ${this.state.timer.isOn ? 'btn-danger' : 'btn-success'}`}\r\n                    >\r\n                        {this.state.timer.isOn ? 'Stop service' : 'Start service'}\r\n                    </Button>\r\n                    <p className={'display-1'}>{this.state.timer.isOn ? observationTime : '0'}</p>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default ServiceObservation;","import React from 'react';\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nclass ArrivalObservation extends React.Component {\r\n    state = {\r\n        arrivalObservation:{\r\n            minute: 0,\r\n            customers: 0\r\n        }\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if ((prevProps.timer.minutes !== this.props.timer.minutes && this.props.timer.minutes !== 0)) {\r\n            this.props.addArrivalObservation(this.state.arrivalObservation);\r\n            this.setState({\r\n                arrivalObservation:{\r\n                    minute: 0,\r\n                    customers: 0\r\n                }\r\n            })\r\n        }\r\n        if (prevProps.isObservationRunning && !this.props.isObservationRunning){\r\n            this.setState({\r\n                arrivalObservation:{\r\n                    minute: 0,\r\n                    customers: 0\r\n                }\r\n            })\r\n        }\r\n    }\r\n    handleAddCustomer() {\r\n        this.setState({\r\n            arrivalObservation:{\r\n                minute: this.props.timer.minutes + 1,\r\n                customers: this.state.arrivalObservation.customers + 1\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.props.timer.isOn) {\r\n            return (\r\n                <div>\r\n                    <Button className={'btn btn-primary btn-lg'}\r\n                            onClick={() => {\r\n                                this.handleAddCustomer()\r\n                            }}\r\n                    >\r\n                        Add Customer\r\n                    </Button>\r\n                    <p className={'display-1'}>{this.state.arrivalObservation.customers}</p><br/>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <Button disabled\r\n                            className={'btn btn-primary btn-lg'}\r\n                    >\r\n                        Add Customer\r\n                    </Button>\r\n                    <p className={'display-1'}>{this.state.arrivalObservation.customers}</p><br/>\r\n                </div>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default ArrivalObservation;","import React from 'react';\r\nimport Table from \"react-bootstrap/Table\";\r\n\r\nclass ServiceTable extends React.Component{\r\n\r\n\trender(){\r\n\t\tconst items = this.props.serviceObservation.map((item, key) =>\r\n\t\t\t<tr id={key} key={key}><td>{item.startTime}</td><td>{item.stopTime}</td><td>{item.serviceTime}</td></tr>\r\n\t\t);\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h5>Service observations</h5>\r\n\t\t\t<Table striped bordered size=\"sm\">\r\n\t\t\t\t<thead>\r\n\t\t\t\t<tr><th>Start time</th><th>Stop time</th><th>Service time</th></tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t{items}\r\n\t\t\t\t</tbody>\r\n\t\t\t</Table>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\nexport default ServiceTable;","import React from 'react';\r\nimport Table from \"react-bootstrap/Table\";\r\n\r\nclass ArrivalTable extends React.Component {\r\n\r\n\r\n    render() {\r\n\r\n        const items = this.props.arrivalObservation.map((item, key) =>\r\n            <tr id={key} key={key}>\r\n                <td>{item.minute}</td>\r\n                <td>{item.customers}</td>\r\n            </tr>\r\n        );\r\n\r\n\r\n        return (\r\n            <div>\r\n                <h5>Arrival observations</h5>\r\n                <Table striped bordered size=\"sm\">\r\n\r\n                    <thead>\r\n                    <tr>\r\n                        <th>Minute</th>\r\n                        <th>Customers</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {items}\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ArrivalTable;","import React from \"react\";\r\nimport ReactExport from \"react-data-export\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\r\n\r\nclass Download extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<ExcelFile element={<Button className={'btn btn-primary'}>Export data to spreadsheet</Button>}>\r\n\t\t\t\t<ExcelSheet data={this.props.serviceTime} name=\"Service Time\">\r\n\t\t\t\t\t<ExcelColumn label=\"Start Time\" value=\"startTime\"/>\r\n\t\t\t\t\t<ExcelColumn label=\"Stop Time\" value=\"stopTime\"/>\r\n\t\t\t\t\t<ExcelColumn label=\"Service Time\" value=\"serviceTime\"/>\r\n\t\t\t\t</ExcelSheet>\r\n\t\t\t\t<ExcelSheet data={this.props.customerPerMinute} name=\"Customers Per Minute\">\r\n\t\t\t\t\t<ExcelColumn label=\"Minute\" value=\"minute\"/>\r\n\t\t\t\t\t<ExcelColumn label=\"Customers\" value=\"customers\"/>\r\n\t\t\t\t</ExcelSheet>\r\n\t\t\t</ExcelFile>\r\n\t\t);\r\n\t}\r\n}\r\nexport default Download;","import React from 'react';\r\nimport {Button} from \"react-bootstrap\";\r\n\r\nclass Timer extends React.Component {\r\n    componentDidUpdate() {\r\n        if (!this.props.timer.isOn) {\r\n            clearInterval(this.timer);\r\n        }\r\n    }\r\n\r\n    toggleTimer() {\r\n        if (!this.props.isObservationRunning) {\r\n            const timer = {\r\n                isOn: true,\r\n                startTime: Date.now(),\r\n                seconds: this.props.timer.seconds,\r\n                minutes: this.props.timer.minutes\r\n            };\r\n            this.props.setIsObservationRunning(true);\r\n            this.props.setTimer(timer);\r\n            this.timer = setInterval(\r\n                () => this.tick(),\r\n                1\r\n            );\r\n        } else {\r\n            clearInterval(this.timer);\r\n            const timer = {\r\n                isOn: false,\r\n                startTime: 0,\r\n                seconds: 0,\r\n                minutes: 0\r\n            };\r\n            this.props.setIsObservationRunning(false);\r\n            this.props.setTimer(timer)\r\n        }\r\n    }\r\n\r\n    tick() {\r\n        const millis = Date.now() - this.props.timer.startTime;\r\n        const minutes = this.convertMS(millis).minute;\r\n        const seconds = this.convertMS(millis).seconds;\r\n        const timer = {\r\n            isOn: true,\r\n            startTime: this.props.timer.startTime,\r\n            seconds: seconds,\r\n            minutes: minutes\r\n        };\r\n        this.props.setTimer(timer)\r\n    }\r\n\r\n    convertMS(milliseconds) {\r\n        var minute, seconds;\r\n        seconds = Math.floor(milliseconds / 1000);\r\n        minute = Math.floor(seconds / 60);\r\n        seconds = seconds % 60;\r\n        return {\r\n            minute: minute,\r\n            seconds: seconds\r\n        };\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <Button\r\n                    className={`btn-lg btn ${!this.props.timer.isOn ? 'btn btn-success' : 'btn btn-danger'}`}\r\n                    onClick={() => {\r\n                        this.toggleTimer()\r\n                    }}>\r\n                    {!this.props.timer.isOn ? 'Start observation' : 'Stop observation'}\r\n                </Button>\r\n                <p className={'display-1'}>\r\n                    {this.props.timer.minutes < 10 ? '0' + (this.props.timer.minutes) : (this.props.timer.minutes)}:{this.props.timer.seconds < 10 ? '0' + (this.props.timer.seconds) : (this.props.timer.seconds)}\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Timer;","import React from 'react';\r\nimport ServiceObservation from './ServiceObservation'\r\nimport ArrivalObservation from './ArrivalObservation'\r\nimport ServiceTable from './ServiceTable'\r\nimport ArrivalTable from './ArrivalTable'\r\nimport {Col, Row} from \"react-bootstrap\";\r\nimport Download from './Download'\r\nimport Timer from \"./Timer\";\r\n\r\nclass Observation extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isObservationRunning: false,\r\n            timer: {\r\n                isOn: false,\r\n                startTime: 0,\r\n                seconds: 0,\r\n                minutes: 0\r\n            },\r\n            customer: 0,\r\n            arrivalObservation: [],\r\n            serviceObservation: []\r\n        };\r\n        this.setIsObservationRunning = this.setIsObservationRunning.bind(this);\r\n        this.setTimer = this.setTimer.bind(this);\r\n        this.addArrivalObservation = this.addArrivalObservation.bind(this);\r\n        this.addServiceObservation = this.addServiceObservation.bind(this);\r\n        this.setCustomer = this.setCustomer.bind(this);\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevState.isObservationRunning === false && this.state.isObservationRunning === true){\r\n            this.setState({\r\n                customer: 0,\r\n                arrivalObservation: [],\r\n                serviceObservation: []\r\n            })\r\n        }\r\n    }\r\n\r\n    setIsObservationRunning(boolean){\r\n        this.setState({\r\n            isObservationRunning: boolean\r\n        })\r\n    }\r\n    setTimer(timer){\r\n        this.setState({\r\n            timer: timer\r\n        })\r\n    }\r\n    setCustomer(num){\r\n\r\n    }\r\n    addArrivalObservation(arrivalObservation){\r\n        const joined = this.state.arrivalObservation.concat(arrivalObservation);\r\n        this.setState(  {\r\n            arrivalObservation: joined\r\n        })\r\n    }\r\n    addServiceObservation(serviceObservation){\r\n        const joined = this.state.serviceObservation.concat(serviceObservation);\r\n        this.setState(  {\r\n            serviceObservation: joined\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Row>\r\n\r\n                    <Col md={4} className={\"text-center\"}>\r\n                        <Timer setTimer={this.setTimer}\r\n                               setIsObservationRunning={this.setIsObservationRunning}\r\n                               timer={this.state.timer}\r\n                               isObservationRunning={this.state.isObservationRunning}\r\n                               setState={this.setState}\r\n                        />\r\n                    </Col>\r\n\r\n                    <Col md={4} className={\"text-center\"}>\r\n                        <ArrivalObservation isObservationRunning={this.state.isObservationRunning}\r\n                                            timer={this.state.timer}\r\n                                            arrivalObservation={this.state.arrivalObservation}\r\n                                            setCustomer={this.setCustomer}\r\n                                            addArrivalObservation={this.addArrivalObservation}\r\n                        />\r\n                    </Col>\r\n\r\n                    <Col md={4} className={\"text-center\"}>\r\n                        <ServiceObservation isObservationRunning={this.state.isObservationRunning}\r\n                                            timer={this.state.timer}\r\n                                            serviceObservation={this.state.serviceObservation}\r\n                                            setCustomer={this.setCustomer}\r\n                                            addServiceObservation={this.addServiceObservation}\r\n                        />\r\n                    </Col>\r\n\r\n                </Row>\r\n                <br/>\r\n                <Row className=\"justify-content-center\">\r\n                    <Col md={4}>\r\n                        <ArrivalTable arrivalObservation={this.state.arrivalObservation}/>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                        <ServiceTable serviceObservation={this.state.serviceObservation}/>\r\n                    </Col>\r\n                    <Col md={4} className=\"text-center\">\r\n                        <h5>Actions</h5>\r\n                        <Download customerPerMinute={this.state.arrivalObservation.customerPerMinute}\r\n                                  serviceTime={this.state.serviceObservation}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Observation;","import React from \"react\";\r\nimport {Nav, Navbar, NavDropdown} from \"react-bootstrap\";\r\n\r\nclass Header extends React.Component{\r\n    render(){\r\n        return(\r\n            <Navbar bg=\"light\" expand=\"lg\" fixed=\"top\" >\r\n                <Navbar.Brand href=\"#home\">{'{QP}'}</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link href=\"#home\">Home</Nav.Link>\r\n                        <Nav.Link href=\"#about\">About</Nav.Link>\r\n                        <NavDropdown title=\"Queue-Project\" id=\"basic-nav-dropdown\">\r\n                            <NavDropdown.Item href=\"#queueAndServiceObservation\">Queue and service observation</NavDropdown.Item>\r\n                            <NavDropdown.Item href=\"#mmcCalculator\">M/M/C-Calculator</NavDropdown.Item>\r\n                        </NavDropdown>\r\n                        {/*<Nav.Link href=\"#thanks\">Special Thanks</Nav.Link>*/}\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        )\r\n    }\r\n}\r\nexport default Header;","import React from \"react\";\r\n\r\nclass Home extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 id={\"home\"}>{'{QP}'}</h1>\r\n                <p className={'align-bottom'}>Welcome to the Queue-Project, created with React.js.</p>\r\n                <hr/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\nimport {Col, Row, Tab, Tabs} from \"react-bootstrap\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nclass About extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2 id={\"about\"}>About</h2>\r\n                <hr/>\r\n                <Row>\r\n                    <Col md={8}>\r\n                        <Tabs defaultActiveKey=\"project\" id=\"uncontrolled-tab-example\">\r\n                            <Tab eventKey=\"project\" title=\"The Project\">\r\n                                <p>\r\n                                    This is a school project created by Mattias and Erik, students at Dalarnas\r\n                                    University.\r\n                                    The purpose for this project is to learn the basics of queue calculations, React.js\r\n                                    and React-Bootstrap.\r\n                                </p>\r\n                                <p>\r\n                                    Right now it is a two-in-one React.js app. First we have the queue observation part,\r\n                                    which is a tool to help keep track during a single line queue observation. It\r\n                                    creates\r\n                                    tables of data and can export it to .xlsl file format to be able to read it in Excel\r\n                                    and do the proper arrival rate and service rate calculations there. The second part\r\n                                    is the M/M/C-Calculator where you can type in the arrival and service rate\r\n                                    from your queue observation. It then calculates the P-value and other interesting\r\n                                    values you can get from a queue observation!\r\n                                </p>\r\n                            </Tab>\r\n                            <Tab eventKey=\"profile\" title=\"Us\">\r\n                                <p>\r\n                                    We are two very busy students studying Systems Science at Dalarnas University, this\r\n                                    part is still under construction.\r\n                                </p>\r\n                            </Tab>\r\n\r\n                        </Tabs>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                        <Card>\r\n                            <Card.Header><span>Contact</span></Card.Header>\r\n                            <Card.Body>\r\n                            <p>Mattias: <a href={\"http://github.com/maosar\"}>Github</a></p>\r\n                            <p>Erik: <a href={\"http://github.com/Albinsson\"}>Github</a></p>\r\n                            </Card.Body>\r\n                        </Card>\r\n\r\n                    </Col>\r\n                </Row>\r\n                <hr/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default About;","import React from \"react\";\r\nclass Footer extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/*<h2 id={\"thanks\"}>Special Thanks</h2>\r\n                <hr/>\r\n                <p>To stackoverflow.com and google.com</p>\r\n                <hr/>*/}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer;","// TODO: Break out into smaller components.\r\n// TODO: Add comments/documentation.\r\n// TODO: Update README.md\r\n// TODO: Add a footer.\r\n// TODO: Add loading animation before each calculation.\r\n// TODO: Make mobil friendly\r\n\r\nimport Observation from './components/observation/Observation';\r\nimport Header from './components/Header';\r\nimport Home from \"./components/Home\";\r\nimport About from \"./components/About\";\r\nimport Footer from \"./components/Footer\";\r\nimport React from 'react';\r\nimport {Card, CardDeck, Col, Container, Form, Row} from \"react-bootstrap\";\r\nimport './App.css';\r\n\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        lambda: '',\r\n        mu: '',\r\n        c: '',\r\n        p: '',\r\n        p0: '',\r\n        lq: '',\r\n        wq: '',\r\n        w: '',\r\n        l: ''\r\n    };\r\n\r\n    handleLambdaChange = event => {\r\n        this.setState({\r\n            lambda: event.target.value,\r\n            p: '',\r\n            p0: '',\r\n            lq: '',\r\n            wq: '',\r\n            w: '',\r\n            l: '',\r\n        });\r\n    };\r\n    handleMuChange = event => {\r\n        this.setState({\r\n            mu: event.target.value,\r\n            p: '',\r\n            p0: '',\r\n            lq: '',\r\n            wq: '',\r\n            w: '',\r\n            l: '',\r\n        });\r\n    };\r\n    handleCChange = event => {\r\n        this.setState({\r\n            c: event.target.value,\r\n            p: '',\r\n            p0: '',\r\n            lq: '',\r\n            wq: '',\r\n            w: '',\r\n            l: '',\r\n        });\r\n    };\r\n\r\n    calculateP() {\r\n        if (this.state.c * this.state.mu > this.state.lambda) {\r\n            this.setState({\r\n                p: this.state.lambda / (this.state.c * this.state.mu)\r\n            })\r\n        } else {\r\n            this.setState({\r\n                lambda: '',\r\n                mu: '',\r\n                c: '',\r\n                p: ''\r\n            });\r\n            alert(\"Arrival rate cannot be larger than or equal to (service rate)*(number of servers)\")\r\n        }\r\n    }\r\n\r\n    calculateP0() {\r\n        let first = 0;\r\n        let c = this.state.c;\r\n        let p = this.state.p;\r\n\r\n        for (let i = c - 1; i >= 0; i--) {\r\n            first += Math.pow(c * p, i) / App.factorialize(i);\r\n        }\r\n\r\n        const p0 = 1 / (first + Math.pow(c * p, c) / (App.factorialize(c) * (1 - p)));\r\n\r\n        this.setState({\r\n            p0: p0\r\n        })\r\n\r\n    }\r\n\r\n    calculateLq() {\r\n        this.setState({\r\n            lq: (this.state.p0 * Math.pow(this.state.lambda / this.state.mu, this.state.c) * this.state.p) / (App.factorialize(this.state.c) * Math.pow(1 - this.state.p, 2))\r\n        })\r\n    }\r\n\r\n    calculateWq() {\r\n        this.setState({\r\n            wq: this.state.lq / this.state.lambda\r\n        })\r\n    }\r\n\r\n    calculateW() {\r\n        this.setState({\r\n            w: this.state.wq + (1 / this.state.mu)\r\n        })\r\n    }\r\n\r\n    calculateL() {\r\n        this.setState({\r\n            l: this.state.lambda * this.state.w\r\n        })\r\n    }\r\n\r\n    static factorialize(num) {\r\n        if (num === 0 || num === 1)\r\n            return 1;\r\n        for (var i = num - 1; i >= 1; i--) {\r\n            num *= i;\r\n        }\r\n        return num;\r\n    }\r\n\r\n    static validateNumber(num) {\r\n        return num !== '' && !isNaN(num);\r\n    }\r\n\r\n    render() {\r\n\r\n        const lambda = this.state.lambda;\r\n        const mu = this.state.mu;\r\n        const c = this.state.c;\r\n        const p = this.state.p;\r\n        const p0 = this.state.p0;\r\n        const lq = this.state.lq;\r\n        const wq = this.state.wq;\r\n        const w = this.state.w;\r\n        const l = this.state.l;\r\n\r\n        return (\r\n            <Container>\r\n                <Header/>\r\n                <Home/>\r\n                <About/>\r\n                <h2 id={'queueAndServiceObservation'}>Queue and service observation</h2>\r\n                <hr/>\r\n                <Observation/>\r\n                <hr/>\r\n                <h2 id={'mmcCalculator'}>M/M/C Calculator</h2>\r\n                <hr/>\r\n                <Form>\r\n                    <Row>\r\n                        <Col md={4}>\r\n                            <Form.Group controlId=\"formLambda\">\r\n                                <Form.Label>Arrival rate:</Form.Label><br/>\r\n                                <Form.Control\r\n                                    name={'lambda'}\r\n                                    type={'text'}\r\n                                    placeholder={'Enter service rate'}\r\n                                    className={`form-control ${this.state.lambda === '' ? '' : App.validateNumber(this.state.lambda) ? 'is-valid' : 'is-invalid'}`}\r\n                                    onChange={this.handleLambdaChange}\r\n                                    value={lambda}\r\n\r\n                                />\r\n                                <div\r\n                                    className={`${this.state.lambda === '' ? 'text-muted' : App.validateNumber(this.state.lambda) ? 'valid-feedback' : 'invalid-feedback'}`}>{this.state.lambda === '' ? 'Arrival rate must be entered' : App.validateNumber(this.state.lambda) ? '\"' + this.state.lambda + '\" is a number!' : '\"' + this.state.lambda + '\" is NOT a number!'}</div>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                            <Form.Group controlId=\"formMu\">\r\n                                <Form.Label>Service rate:</Form.Label><br/>\r\n                                <Form.Control\r\n                                    name={'mu'}\r\n                                    type={'text'}\r\n                                    placeholder={'Enter service rate'}\r\n                                    className={`form-control ${this.state.mu === '' ? '' : App.validateNumber(this.state.mu) ? 'is-valid' : 'is-invalid'}`}\r\n                                    onChange={this.handleMuChange}\r\n                                    value={mu}\r\n                                />\r\n                                <div\r\n                                    className={`${this.state.mu === '' ? 'text-muted' : App.validateNumber(this.state.mu) ? 'valid-feedback' : 'invalid-feedback'}`}>{this.state.mu === '' ? 'Service rate must be entered' : App.validateNumber(this.state.mu) ? '\"' + this.state.mu + '\" is a number!' : '\"' + this.state.mu + '\" is NOT a number!'}</div>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                            <Form.Group controlId=\"formBasicC\">\r\n                                <Form.Label>Number of servers:</Form.Label><br/>\r\n                                <Form.Control\r\n                                    name={'name'}\r\n                                    type={'text'}\r\n                                    placeholder={'Enter number of servers'}\r\n                                    className={`form-control ${this.state.c === '' ? '' : App.validateNumber(this.state.c) ? 'is-valid' : 'is-invalid'}`}\r\n                                    onChange={this.handleCChange}\r\n                                    value={c}\r\n                                />\r\n                                <div\r\n                                    className={`${this.state.c === '' ? 'text-muted' : App.validateNumber(this.state.c) ? 'valid-feedback' : 'invalid-feedback'}`}>{this.state.c === '' ? 'Number of servers must be entered' : App.validateNumber(this.state.c) ? '\"' + this.state.c + '\" is a number!' : '\"' + this.state.c + '\" is NOT a number!'}</div>\r\n\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n                <hr/>\r\n                <CardDeck>\r\n                    <Card id={'p-card'} md={4}>\r\n                        <Card.Header>The average utilization of the system (p)</Card.Header>\r\n                        <Card.Body>\r\n                            <Card.Text>\r\n                                {App.validateNumber(lambda) && App.validateNumber(mu) && App.validateNumber(c) && !App.validateNumber(p) ? this.calculateP() : ''}\r\n                                {App.validateNumber(p) ? `P is: ${Math.round(p * 10000) / 10000}` : 'All values must be entered correctly to calculate P.'}\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                    <Card id={'p0-card'} md={4}>\r\n                        <Card.Header>The probability that no customers are in the system (p0)</Card.Header>\r\n                        <Card.Body>\r\n                            <Card.Text>\r\n                                {App.validateNumber(p) && !App.validateNumber(p0) ? this.calculateP0() : ''}\r\n                                {App.validateNumber(p0) ? `P0 is: ${Math.round(p0 * 10000) / 10000}` : 'All values must be entered correctly to calculate p0.'}\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                    <Card id={'lq-card'} md={4}>\r\n                        <Card.Header>The average number of customers waiting in line (lq)</Card.Header>\r\n                        <Card.Body>\r\n                            <Card.Text>\r\n                                {App.validateNumber(p0) && !App.validateNumber(lq) ? this.calculateLq() : ''}\r\n                                {App.validateNumber(lq) ? `LQ is: ${Math.round(lq * 10000) / 10000}` : 'All values must be entered correctly to calculate LQ.'}\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </CardDeck>\r\n                <br/>\r\n                <CardDeck>\r\n                    <Card id={'wq-card'} md={4}>\r\n                        <Card.Header>The average time spent waiting in line</Card.Header>\r\n                        <Card.Body>\r\n                            <Card.Text>\r\n                                {App.validateNumber(lq) && !App.validateNumber(wq) ? this.calculateWq() : ''}\r\n                                {App.validateNumber(wq) ? `WQ is: ${Math.round(wq * 10000) / 10000}` : 'All values must be entered correctly to calculate WQ.'}\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                    <Card id={'w-card'} md={4}>\r\n                        <Card.Header>The average time spent in the system, including service (w)</Card.Header>\r\n                        <Card.Body>\r\n                            <Card.Text>\r\n                                {App.validateNumber(wq) && !App.validateNumber(w) ? this.calculateW() : ''}\r\n                                {App.validateNumber(w) ? `W is: ${Math.round(w * 10000) / 10000}` : 'All values must be entered correctly to calculate W.'}\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                    <Card id={'l-card'} md={4}>\r\n                        <Card.Header>The average number of customers in the service system (l)</Card.Header>\r\n                        <Card.Body>\r\n                            <Card.Text>\r\n                                {App.validateNumber(w) && !App.validateNumber(l) ? this.calculateL() : ''}\r\n                                {App.validateNumber(l) ? `L is: ${Math.round(l * 10000) / 10000}` : 'All values must be entered correctly to calculate L.'}\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </CardDeck>\r\n                <hr/>\r\n                <Footer/>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}